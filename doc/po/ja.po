# Japanese translations for PACKAGE package.
# Copyright (C) 2014 THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# Ippei Obayashi <ohai@kmc.gr.jp>, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-02 02:46+0900\n"
"PO-Revision-Date: 2014-10-16 18:10+0900\n"
"Last-Translator: Ippei Obayashi <ohai@kmc.gr.jp>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../README.md:1
msgid "# Ruby/SDL2"
msgstr ""

#: ../../README.md:3
msgid "The simple ruby extension library for SDL 2.x."
msgstr ""

#: ../../README.md:5
msgid ""
"# Install\n"
"Before installing Ruby/SDL2, you need to install:"
msgstr ""

#: ../../README.md:8
msgid ""
"* [SDL 2.x](http://www.libsdl.org/download-2.0.php)\n"
"* [SDL_image](https://www.libsdl.org/projects/SDL_image/)\n"
"* [SDL_mixer](https://www.libsdl.org/projects/SDL_mixer/)\n"
"* [SDL_ttf](https://www.libsdl.org/projects/SDL_ttf/)"
msgstr ""

#: ../../README.md:13
msgid ""
"After installing these libraries, you can install Ruby/SDL2\n"
"from github"
msgstr ""

#: ../../README.md:16
msgid ""
"    git clone https://github.com/ohai/ruby-sdl2.git\n"
"    cd ruby-sdl2\n"
"    gem build rubysdl2.gem\n"
"    gem install ruby-sdl2-x.y.z.gem"
msgstr ""

#: ../../README.md:21
msgid ""
"## Install on Windows\n"
"Please write this."
msgstr ""

#: ../../README.md:24
msgid "# License"
msgstr ""

#: ../../README.md:26
msgid "LGPL v3 (see {file:COPYING.txt})."
msgstr ""

#: ../../README.md:28
msgid "# Author"
msgstr ""

#: ../../README.md:30
msgid "Ippei Obayashi <ohai@kmc.gr.jp>"
msgstr ""

# SDL2::VERSION
#: ../../lib/sdl2/version.rb:3
msgid "Version string of Ruby/SDL2"
msgstr "Ruby/SDL2 のバージョン文字列"

# SDL2::VERSION_NUMBER
#: ../../lib/sdl2/version.rb:5
msgid "Version of Ruby/SDL2, [major, minor, patch level]"
msgstr "Ruby/SDL2 のバージョン, [major, minor, patch level]"

# SDL2
#: ../../lib/sdl2/version.rb:154 ../../main.c:154
msgid "Namespace module for Ruby/SDL2."
msgstr ""

# SDL2.init
#: ../../main.c:93 ../../main.c:117
msgid ""
"Initialize SDL.\n"
"You must call this function before using any other Ruby/SDL2 methods."
msgstr ""
"SDLを初期化します．\n"
"Ruby/SDL2の他のメソッドを呼ぶ前にこれを呼びだす必要があります．"

# SDL2.init
#: ../../main.c:96 ../../main.c:120
msgid ""
"You can specify initialized subsystem by flags which is\n"
"bitwise OR of the following constants:"
msgstr "初期化するサブシステムを以下の定数のビットORでflagsに指定します．"

# SDL2.init
#: ../../main.c:99 ../../main.c:123
msgid ""
"* SDL2::INIT_TIMER - timer subsystem\n"
"* SDL2::INIT_AUDIO - audio subsystem\n"
"* SDL2::INIT_VIDEO - video subsystem\n"
"* SDL2::INIT_JOYSTICK - joystick subsystem\n"
"* SDL2::INIT_HAPTIC - haptic (force feedback) subsystem\n"
"    (interface is not implemented yet)\n"
"* SDL2::INIT_GAMECONTROLLER - controller subsystem\n"
"* SDL2::INIT_EVENTS - events subsystem\n"
"* SDL2::INIT_EVERYTHING - all of the above flags\n"
"* SDL2::INIT_NOPARACHUTE - this flag is ignored; for compatibility"
msgstr ""
"* SDL2::INIT_TIMER - タイマサブシステム\n"
"* SDL2::INIT_AUDIO - オーディオサブシステム\n"
"* SDL2::INIT_VIDEO - ビデオサブシステム\n"
"* SDL2::INIT_JOYSTICK - ジョイステッック\n"
"* SDL2::INIT_HAPTIC - haptic (force feedback) subsystem\n"
"    (interface is not implemented yet)\n"
"* SDL2::INIT_GAMECONTROLLER - コントローラサブシステム\n"
"* SDL2::INIT_EVENTS - イベントサブシステム\n"
"* SDL2::INIT_EVERYTHING - 以上のサブシステムすべて\n"
"* SDL2::INIT_NOPARACHUTE - 1.x との互換性のためのフラグで，無視される"

# @overload
#: ../../main.c:116 ../../video.c:2051
msgid "tag|overload|init"
msgstr ""

# @param [Integer]
#: ../../main.c:116 ../../video.c:355 ../../video.c:413 ../../video.c:2051
msgid "tag|param|flags"
msgstr ""

# @param [Integer] flags
#: ../../main.c:116
msgid "initializing subsystems"
msgstr "初期化するサブシステム"

# @return [Integer]
#: ../../main.c:160
msgid "error code sent from SDL library"
msgstr "SDL ライブラリからのエラーコード(普通は-1)"

# SDL2::Error
#: ../../main.c:161
msgid "An exception class for all Ruby/SDL2 specific errors."
msgstr "Ruby/SDL2 特有のエラーのための例外クラス"

# SDL2::Window
# SDL2::Window.create
#: ../../video.c:308
msgid "This class represents a window."
msgstr "このクラスは画面上のウインドウを表します．"

# SDL2::Window
# SDL2::Window.create
#: ../../video.c:310
msgid ""
"If you want to use graphical application using Ruby/SDL, first you need to\n"
"create a window."
msgstr ""
""

# SDL2::Window
# SDL2::Window.create
#: ../../video.c:313
msgid ""
"All of methods/class methods are available only after initializing video\n"
"subsystem by {SDL2.init}."
msgstr ""
"{SDL2.init}を呼び出してからでないとビデオサブシステムのメソッドを使う\n"
"ことはできません．"

# SDL2::Window
#: ../../video.c:316
msgid "# Window Flags"
msgstr "# ウィンドウフラグ"

# SDL2::Window
#: ../../video.c:318
msgid ""
"OR'd bits of the following constants represents window states.\n"
"You can see a window state using {#flags} and create a window with a specified"
"\n"
"state using flag parameter of {.create}."
msgstr ""

# SDL2::Window
#: ../../video.c:322
msgid ""
"* {SDL2::Window::FULLSCREEN} - fullscreen window\n"
"* {SDL2::Window::FULLSCREEN_DESKTOP} -\n"
"  fullscreen window at the current desktop resolution\n"
"* {SDL2::Window::OPENGL} - window usable with OpenGL context\n"
"* {SDL2::Window::SHOWN} - window is visible\n"
"* {SDL2::Window::HIDDEN} - window is not visible\n"
"* {SDL2::Window::BORDERLESS} - no window decoration\n"
"* {SDL2::Window::RESIZABLE} - window is resizable\n"
"* {SDL2::Window::MINIMIZDED} - window is minimized\n"
"* {SDL2::Window::MAXIMIZED} - window is maximized\n"
"* {SDL2::Window::INPUT_GRABBED} - window has grabbed input focus\n"
"* {SDL2::Window::INPUT_FOCUS} - window has input focus\n"
"* {SDL2::Window::MOUSE_FOCUS} - window has mouse focus\n"
"* {SDL2::Window::FOREIGN} - window is not created by SDL\n"
"* {SDL2::Window::ALLOW_HIGHDPI} - window should be created in high-DPI mode if"
" supported\n"
"* {SDL2::Window::MOUSE_CAPTURE} - window has mouse captured"
msgstr ""

# @param [Integer] h
#: ../../video.c:355
msgid "the height of the window"
msgstr ""

# @param [Integer]
#: ../../video.c:355 ../../video.c:987 ../../video.c:1559 ../../video.c:1658
msgid "tag|param|y"
msgstr ""

# @param [Integer] x
#: ../../video.c:355
msgid "the x position of the left-top of the window"
msgstr ""

# @param [Integer]
#: ../../video.c:355 ../../video.c:794 ../../video.c:1559
msgid "tag|param|h"
msgstr ""

# @param [Integer]
#: ../../video.c:355 ../../video.c:794 ../../video.c:1559
msgid "tag|param|w"
msgstr ""

# @param [Integer] y
#: ../../video.c:355
msgid "the y position of the left-top of the window"
msgstr ""

# @return [SDL2::Window]
#: ../../video.c:355
msgid "created window"
msgstr ""

# @param [Integer]
#: ../../video.c:355 ../../video.c:987 ../../video.c:1559 ../../video.c:1658
msgid "tag|param|x"
msgstr ""

# @param [Integer] w
#: ../../video.c:355
msgid "the width of the window"
msgstr ""

# @overload
#: ../../video.c:355
msgid "tag|overload|create"
msgstr ""

# @param [Integer] flags
#: ../../video.c:355
msgid "0, or one or more [Window flag masks](#label-Flags) OR'd together"
msgstr ""

# SDL2::Window.create
#: ../../video.c:356
msgid "Create a window with the specified position (x,y), dimensions (w,h) and flags."
msgstr ""

# @overload
#: ../../video.c:396
msgid "tag|overload|destroy"
msgstr ""

# SDL2::Window#destroy
#: ../../video.c:397
msgid "Destroy window."
msgstr ""

# SDL2::Window#destroy
#: ../../video.c:399
msgid ""
"You cannot call almost all methods after calling this method.\n"
"The exception is {#destroy?}."
msgstr ""

# @param [Integer]
#: ../../video.c:413
msgid "tag|param|index"
msgstr ""

# @overload
#: ../../video.c:413
msgid "tag|overload|create_renderer"
msgstr ""

# @param [Integer] index
#: ../../video.c:413
msgid ""
"the index of the rendering driver to initialize,\n"
"or -1 to initialize the first one supporting the requested flags"
msgstr ""

# @raise [SDL2::Error]
#: ../../video.c:413
msgid "raises when an error occurs."
msgstr ""

# @return [SDL2::Renderer]
#: ../../video.c:413
msgid "the created renderer (rendering context)"
msgstr ""

# @param [Integer] flags
#: ../../video.c:413
msgid "0, or one or more [Renderer flag masks](SDL2) OR'd together;"
msgstr ""

# SDL2::Window#create_renderer
#: ../../video.c:414
msgid "Create a 2D rendering context for a window."
msgstr ""

# @overload
#: ../../video.c:434
msgid "tag|overload|renderer"
msgstr ""

# @return [SDL2::Renderer]
#: ../../video.c:434
msgid "the associated renderer"
msgstr ""

# @return [nil]
#: ../../video.c:434
msgid "if no renderer is created yet"
msgstr ""

# SDL2::Window#renderer
#: ../../video.c:435
msgid "Return the renderer associate with the window"
msgstr ""

# SDL2::Window#input_is_grabbed?
#: ../../video.c:499
msgid "Window_set_gamma_ramp"
msgstr ""

# SDL2::Renderer
#: ../../video.c:729
msgid "This class represents a 2D rendering context for a window."
msgstr ""

# SDL2::Renderer
#: ../../video.c:731
msgid ""
"You can create a renderer using {SDL2::Window#create_renderer} and\n"
"use it to draw figures on the window."
msgstr ""

# SDL2::Renderer
#: ../../video.c:734
msgid ""
"# Flags\n"
"You can specify the OR'd bits of the following constants\n"
"{SDL2::Window#create_renderer when you create a new renderer}."
msgstr ""

# SDL2::Renderer
#: ../../video.c:738
msgid ""
"* SDL2::Renderer::SOFTWARE - the renderer is a software fallback\n"
"* SDL2::Renderer::ACCELERATED - the renderer uses hardware acceleration\n"
"* SDL2::Renderer::PRESENTVSYNC - present is synchronized with the refresh rate"
"\n"
"* SDL2::Renderer::TARGETTEXTURE - the renderer supports rendering to texture"
msgstr ""

# SDL2::Renderer
#: ../../video.c:743
msgid "No flags(==0) gives priority to available ACCELERATED renderers"
msgstr ""

# @return [Array<SDL2::Renderer::Info>]
#: ../../video.c:754
msgid "information about rendering contexts"
msgstr ""

# @overload
#: ../../video.c:754
msgid "tag|overload|drivers_info"
msgstr ""

# SDL2::Renderer.drivers_info
#: ../../video.c:755
msgid "Return information of all available rendering contexts."
msgstr ""

# @raise [SDL2::Error]
#: ../../video.c:794 ../../video.c:816
msgid "raised when the texuture cannot be created"
msgstr ""

# @param [Integer] h
#: ../../video.c:794
msgid "the height ofthe texture in pixels"
msgstr ""

# @param [Integer] w
#: ../../video.c:794
msgid "the width ofthe texture in pixels"
msgstr ""

# @return [SDL2::Texture]
#: ../../video.c:794 ../../video.c:816
msgid "the created texture"
msgstr ""

# @overload
#: ../../video.c:794
msgid "tag|overload|create_texture"
msgstr ""

# @see
#: ../../video.c:794
msgid "tag|see|#create_texture_from"
msgstr ""

# @param [Integer] access
#: ../../video.c:794
msgid "texture access pattern"
msgstr ""

# @param [SDL2::PixelFormat, Integer]
#: ../../video.c:794
msgid "tag|param|format"
msgstr ""

# SDL2::Rect#h
#: ../../video.c:794
#, fuzzy
msgid "format of the texture"
msgstr "長方形の高さ"

# @param [Integer]
#: ../../video.c:794
msgid "tag|param|access"
msgstr ""

# SDL2::Renderer#create_texture
#: ../../video.c:795
msgid "Create a new texture for the rendering context."
msgstr ""

# SDL2::Renderer#create_texture
#: ../../video.c:797
msgid "You can use the following constants to specify access pattern"
msgstr ""

# SDL2::Renderer#create_texture
#: ../../video.c:799
msgid ""
"* SDL2::Texture::ACCESS_STATIC - changes rarely, not lockable\n"
"* SDL2::Texture::ACCESS_STREAMING - changes frequently, lockable\n"
"* SDL2::Texture::ACCESS_TARGET - can be used as a render target"
msgstr ""

# @see
#: ../../video.c:816
msgid "tag|see|#create_texture"
msgstr ""

# @param [SDL2::Surface]
#: ../../video.c:816
msgid "tag|param|surface"
msgstr ""

# @param [SDL2::Surface] surface
#: ../../video.c:816
msgid "the surface containing pixels for the texture"
msgstr ""

# @overload
#: ../../video.c:816
msgid "tag|overload|create_texture_from"
msgstr ""

# SDL2::Renderer#create_texture_from
#: ../../video.c:817
msgid "Create a texture from an existing surface."
msgstr ""

# @overload
#: ../../video.c:850
msgid "tag|overload|copy"
msgstr ""

# @raise [SDL2::Error]
#: ../../video.c:850 ../../video.c:887
msgid "raised when copy is failed"
msgstr ""

# @param [SDL2::Rect, nil] srcrect
#: ../../video.c:850 ../../video.c:887
msgid "the source rectangle, or nil for the entire texture"
msgstr ""

# @see
#: ../../video.c:850
msgid "tag|see|#copy_ex"
msgstr ""

# @param [SDL2::Rect, nil] dstrect
#: ../../video.c:850 ../../video.c:887
msgid ""
"the destination rectangle, or nil for the entire\n"
"rendering target; the texture will be stretched to fill the given rectangle"
msgstr ""

# @param [SDL2::Texture]
#: ../../video.c:850 ../../video.c:887
msgid "tag|param|texture"
msgstr ""

# @param [SDL2::Texture] texture
#: ../../video.c:850 ../../video.c:887
msgid "the source texture"
msgstr ""

# @param [SDL2::Rect, nil]
#: ../../video.c:850 ../../video.c:887
msgid "tag|param|srcrect"
msgstr ""

# @param [SDL2::Rect, nil]
#: ../../video.c:850 ../../video.c:887
msgid "tag|param|dstrect"
msgstr ""

# SDL2::Renderer#copy
#: ../../video.c:851
msgid "Copy a portion of the texture to the current rendering target."
msgstr ""

# @param [Integer]
#: ../../video.c:887
msgid "tag|param|flip"
msgstr ""

# @see
#: ../../video.c:887
msgid "tag|see|#copy"
msgstr ""

# @param [Integer] flip
#: ../../video.c:887
msgid "bits OR'd of the flip consntants"
msgstr ""

# @overload
#: ../../video.c:887
msgid "tag|overload|copy_ex"
msgstr ""

# @param [Float]
#: ../../video.c:887
msgid "tag|param|angle"
msgstr ""

# @param [SDL2::Point, nil] center
#: ../../video.c:887
msgid ""
"the point around which dstrect will be rotated,\n"
"(if nil, rotation will be done around the center of dstrect)"
msgstr ""

# @param [Float] angle
#: ../../video.c:887
msgid ""
"an angle in degree indicating the rotation\n"
"that will be applied to dstrect"
msgstr ""

# @param [SDL2::Point, nil]
#: ../../video.c:887
msgid "tag|param|center"
msgstr ""

# SDL2::Renderer#copy_ex
#: ../../video.c:888
msgid ""
"Copy a portion of the texture to the current rendering target,\n"
"rotating it by angle around the given center and also flipping\n"
"it top-bottom and/or left-right."
msgstr ""

# SDL2::Renderer#copy_ex
#: ../../video.c:892
msgid "You can use the following constants to specify the horizontal/vertical flip:"
msgstr ""

# SDL2::Renderer#copy_ex
#: ../../video.c:894
msgid ""
"* SDL2::Renderer::FLIP_HORIZONTAL - flip horizontally\n"
"* SDL2::Renderer::FLIP_VERTICAL - flip vertically\n"
"* SDL2::Renderer::FLIP_NONE - do not flip, equal to zero"
msgstr ""

# SDL2::Renderer#present
#: ../../video.c:901
msgid "Update the screen with rendering performed"
msgstr ""

# SDL2::Renderer#clear
#: ../../video.c:911
msgid "Crear the rendering target with the drawing color."
msgstr ""

# SDL2::Renderer#draw_color
#: ../../video.c:921
msgid "Get the color used for drawing operations"
msgstr ""

# @see
#: ../../video.c:927
msgid "tag|see|#draw_color="
msgstr ""

# @return [[Integer,Integer,Integer,Integer]]
#: ../../video.c:927
msgid ""
"red, green, blue, and alpha components of the drawing color\n"
"(all components are more than or equal to 0 and less than and equal to 255)"
msgstr ""

# @param [[Integer, Integer, Integer, Integer]] color
#: ../../video.c:950
msgid "red, green, blue, and alpha components used for drawing"
msgstr ""

# @param [[Integer, Integer, Integer, Integer]]
# @param [[Integer, Integer, Integer]]
#: ../../video.c:950
msgid "tag|param|color"
msgstr ""

# @overload
#: ../../video.c:950
msgid "tag|overload|draw_color="
msgstr ""

# @see
#: ../../video.c:950
msgid "tag|see|#draw_color"
msgstr ""

# @param [[Integer, Integer, Integer]] color
#: ../../video.c:950
msgid "red, green, and blue components used for drawing"
msgstr ""

# SDL2::Renderer#draw_color=
#: ../../video.c:951
msgid "Set the color used for drawing operations"
msgstr ""

# SDL2::Renderer#draw_color=
#: ../../video.c:953
msgid ""
"All color components (including alpha) must be more than or equal to 0\n"
"and less than and equal to 255"
msgstr ""

# SDL2::Point#x
#: ../../video.c:971
#, fuzzy
msgid "the y coordinate of the start point"
msgstr "点のX座標"

# @overload
#: ../../video.c:971
msgid "tag|overload|draw_line"
msgstr ""

# @param [Integer]
#: ../../video.c:971
msgid "tag|param|x1"
msgstr ""

# SDL2::Point#x
#: ../../video.c:971
#, fuzzy
msgid "the y coordinate of the end point"
msgstr "点のX座標"

# @param [Integer]
#: ../../video.c:971
msgid "tag|param|y2"
msgstr ""

# SDL2::Point#x
#: ../../video.c:971
#, fuzzy
msgid "the x coordinate of the end point"
msgstr "点のX座標"

# SDL2::Point#x
#: ../../video.c:971
#, fuzzy
msgid "the x coordinate of the start point"
msgstr "点のX座標"

# @param [Integer]
#: ../../video.c:971
msgid "tag|param|x2"
msgstr ""

# @param [Integer]
#: ../../video.c:971
msgid "tag|param|y1"
msgstr ""

# SDL2::Renderer#draw_line
#: ../../video.c:972
msgid ""
"Draw a line from (x1, y1) to (x2, y2) using drawing color given by\n"
"{#draw_color=}."
msgstr ""

# SDL2::Point#x
#: ../../video.c:987 ../../video.c:1658
#, fuzzy
msgid "the y coordinate of the point"
msgstr "点のX座標"

# @overload
#: ../../video.c:987
msgid "tag|overload|draw_point"
msgstr ""

# SDL2::Point#x
#: ../../video.c:987 ../../video.c:1658
#, fuzzy
msgid "the x coordinate of the point"
msgstr "点のX座標"

# SDL2::Renderer#draw_point
#: ../../video.c:988
msgid "Draw a point at (x, y) using drawing color given by {#draw_color=}."
msgstr ""

# @overload
#: ../../video.c:1001
msgid "tag|overload|draw_rect"
msgstr ""

# @param [SDL2::Rect]
#: ../../video.c:1001 ../../video.c:1015
msgid "tag|param|rect"
msgstr ""

# @param [SDL2::Rect] rect
#: ../../video.c:1001 ../../video.c:1015
msgid "the drawing rectangle"
msgstr ""

# SDL2::Renderer#draw_rect
#: ../../video.c:1002
msgid "Draw a rectangle using drawing color given by {#draw_color=}."
msgstr ""

# @overload
#: ../../video.c:1015
msgid "tag|overload|fill_rect"
msgstr ""

# SDL2::Renderer#fill_rect
#: ../../video.c:1016
msgid "Draw a filled rectangle using drawing color given by {#draw_color=}."
msgstr ""

# SDL2::Renderer#info
#: ../../video.c:1022
msgid "Get information about _self_ rendering context ."
msgstr ""

# @return [SDL2::Renderer::Info]
#: ../../video.c:1026
msgid "rendering information"
msgstr ""

# @param [SDL2::Texture, nil] target
#: ../../video.c:1111
msgid ""
"the targeted texture, or nil\n"
"for the default render target(i.e. screen)"
msgstr ""

# @see
#: ../../video.c:1111
msgid "tag|see|#render_target"
msgstr ""

# @overload
#: ../../video.c:1111
msgid "tag|overload|render_target="
msgstr ""

# @param [SDL2::Texture, nil]
#: ../../video.c:1111
msgid "tag|param|target"
msgstr ""

# SDL2::Renderer#render_target=
#: ../../video.c:1112
msgid "Set a texture as the current render target."
msgstr ""

# SDL2::Renderer#render_target=
#: ../../video.c:1114
msgid ""
"Some renderers have ability to render to a texture instead of a screen.\n"
"You can judge whether your renderer has this ability using\n"
"{#support_render_target?}."
msgstr ""

# SDL2::Renderer#render_target=
#: ../../video.c:1118
msgid ""
"The target texture musbe be {#create_texture created} with the\n"
"SDL2::Texture::ACCESS_TARGET flag."
msgstr ""

# SDL2::Renderer#render_target
#: ../../video.c:1120
msgid "Get the current render target."
msgstr ""

# @return [SDL2::Texture]
#: ../../video.c:1128
msgid "the current rendering target"
msgstr ""

# @return [nil]
#: ../../video.c:1128
msgid "for the default render target (i.e. screen)"
msgstr ""

# @see
#: ../../video.c:1128
msgid "tag|see|#render_target="
msgstr ""

# @see
#: ../../video.c:1128
msgid "tag|see|#support_render_target?"
msgstr ""

# SDL2::Rect.[]
#: ../../video.c:1508
msgid "Alias of new. See {#initialize}."
msgstr "new の別名。詳しくは {#initialize}参照。"

# SDL2::Rect#h
#: ../../video.c:1508 ../../video.c:1559
msgid "Height of the rectangle"
msgstr "長方形の高さ"

# SDL2::Rect#w
#: ../../video.c:1508 ../../video.c:1559
msgid "Width of the rectangle"
msgstr "長方形の幅"

# SDL2::Rect#y
#: ../../video.c:1508 ../../video.c:1559
msgid "Y coordiante of the left-top point of the rectangle"
msgstr "長方形の左上の点のY座標"

# SDL2::Rect#x
#: ../../video.c:1508 ../../video.c:1559
msgid "X coordiante of the left-top point of the rectangle"
msgstr "長方形の左上の点のX座標"

# SDL2::Rect
#: ../../video.c:1508
msgid "This class represents a rectangle in SDL2."
msgstr "このクラスは SDL2 上の長方形を表します"

# SDL2::Rect
#: ../../video.c:1510
msgid ""
"Any rectanle is represented by four attributes x, y, w, and h,\n"
"and these four attributes must be integer."
msgstr "長方形は x, y (左上の x,y 座標)と w(幅), h(高さ) で表されます。これらの値はすべて整数でなければなりません。"

# SDL2::Rect#initialize
#: ../../video.c:1543 ../../video.c:1560
msgid "Create a new SDL2::Rect object"
msgstr "SDL2::Rect オブジェクトを生成します"

# @overload
#: ../../video.c:1559 ../../video.c:1658
msgid "tag|overload|initialize"
msgstr ""

# @overload
#: ../../video.c:1559
msgid "tag|overload|initialze"
msgstr ""

# SDL2::Rect#initialize
#: ../../video.c:1560
msgid ""
"Create a new SDL2::Rect object whose x, w, w, and h are all\n"
"zero."
msgstr "SDL2::Rect オブジェクトを生成します。x,y,w,h はすべて 0 で初期化されます。"

# SDL2::Rect#inspect
#: ../../video.c:1577
msgid "Inspection string for debug"
msgstr "デバッグ用文字列を返します"

# @param [SDL2::Rect]
#: ../../video.c:1601 ../../video.c:1618
msgid "tag|param|other"
msgstr ""

# @param [SDL2::Rect] other
#: ../../video.c:1601 ../../video.c:1618
msgid "rectangle"
msgstr "長方形"

# @overload
#: ../../video.c:1601
msgid "tag|overload|intersection"
msgstr ""

# SDL2::Rect#intersection
#: ../../video.c:1602
msgid "Returns the intersection rect of self and other."
msgstr "self と other の共通部分の長方形を返します．"

# SDL2::Rect#intersection
#: ../../video.c:1604
msgid "If there is no intersection, returns nil."
msgstr "共通部分が存在しない場合は nil を返します．"

# @overload
#: ../../video.c:1618
msgid "tag|overload|union"
msgstr ""

# SDL2::Rect#union
#: ../../video.c:1619
msgid "Returns the minimal rect containing self and other"
msgstr "self と other の両方を含む最小の長方形を返します．"

# SDL2::Point#y
#: ../../video.c:1626
msgid "Y coordiante of the point."
msgstr "点のY座標"

# SDL2::Point#x
#: ../../video.c:1626
msgid "X coordiante of the point."
msgstr "点のX座標"

# SDL2::Point
#: ../../video.c:1626
msgid ""
"This class represents a point in SDL library.\n"
"Some method requires this method."
msgstr "このクラスは点を表します．ruby/sdl2のメソッドにはこのクラスのインスタンスを要求するものがあります．"

# SDL2::Rect#initialize
#: ../../video.c:1646
#, fuzzy
msgid "Create a new point object."
msgstr "SDL2::Rect オブジェクトを生成します"

# SDL2::Point#initialize
#: ../../video.c:1659
msgid "x and y of the created point object are initialized by 0"
msgstr ""

# SDL2::Point#inspect
#: ../../video.c:1669
msgid "Return inspection string."
msgstr ""

# @param [Integer] flags
#: ../../video.c:2051
msgid "submodule bits"
msgstr ""

# @raise [SDL2::Error]
#: ../../video.c:2051
msgid "raised when initializing is failed."
msgstr ""

# SDL2::IMG#init
# SDL2::IMG.init
#: ../../video.c:2052
msgid "Initialize SDL_image."
msgstr ""

# SDL2::IMG.init
#: ../../video.c:2054
msgid ""
"You can specify the supporting image formats by bitwise OR'd of the\n"
"following constants."
msgstr ""

# SDL2::IMG#init
#: ../../video.c:2054
msgid ""
"  You can specify the supporting image formats by bitwise OR'd of the\n"
"  following constants."
msgstr ""

# SDL2::IMG#init
#: ../../video.c:2057
msgid ""
"  * {SDL2::IMG::INIT_JPG}\n"
"  * {SDL2::IMG::INIT_PNG}\n"
"  * {SDL2::IMG::INIT_TIF}"
msgstr ""

# SDL2::IMG.init
#: ../../video.c:2057
msgid ""
"* {SDL2::IMG::INIT_JPG}\n"
"* {SDL2::IMG::INIT_PNG}\n"
"* {SDL2::IMG::INIT_TIF}"
msgstr ""

# SDL2::IMG.init
#: ../../video.c:2061
msgid ""
"You need to initialize SDL_image to check whether specified format\n"
"is supported by your environment. If your environment does not\n"
"support required support format, you have a {SDL2::Error} exception."
msgstr ""

# SDL2::IMG#init
#: ../../video.c:2061
msgid ""
"  You need to initialize SDL_image to check whether specified format\n"
"  is supported by your environment. If your environment does not\n"
"  support required support format, you have a {SDL2::Error} exception."
msgstr ""

# SDL2::IMG#init
#: ../../video.c:2065
msgid ""
"  @param [Integer] flags submodule bits\n"
"  @return [nil]"
msgstr ""

# SDL2::IMG#init
#: ../../video.c:2068
msgid "  @raise [SDL2::Error] raised when initializing is failed."
msgstr ""

# @raise [SDL2::Error]
#: ../../video.c:2075 ../../video.c:2102
msgid ""
"raised when you fail to load (for example,\n"
"you have a wrong file name, or the file is broken)"
msgstr ""

# @return [SDL2::Surface]
#: ../../video.c:2075
msgid "Created surface"
msgstr ""

# @param [String]
#: ../../video.c:2075 ../../video.c:2102
msgid "tag|param|file"
msgstr ""

# @overload
#: ../../video.c:2075
msgid "tag|overload|load"
msgstr ""

# @see
#: ../../video.c:2075
msgid "tag|see|SDL2::Renderer#load_texture"
msgstr ""

# @see
#: ../../video.c:2075 ../../video.c:2102
msgid "tag|see|SDL2::IMG.init"
msgstr ""

# @param [String] file
#: ../../video.c:2075
msgid "the image file name to load a surface from"
msgstr ""

# SDL2::Surface.load
#: ../../video.c:2076
msgid "Load file and create a new {SDL2::Surface}."
msgstr ""

# SDL2::Renderer#load_texture
# SDL2::Surface.load
#: ../../video.c:2078 ../../video.c:2105
msgid ""
"This method uses SDL_image. SDL_image supports following formats:\n"
"BMP, CUR, GIF, ICO, JPG, LBP, PCX, PNG, PNM, TGA, TIF, XCF, XPM, and XV."
msgstr ""

# @see
#: ../../video.c:2102
msgid "tag|see|SDL2::Surface.load"
msgstr ""

# @param [String] file
#: ../../video.c:2102
msgid "the image file name to load a texture from"
msgstr ""

# @return [SDL2::Texture]
#: ../../video.c:2102
msgid "Created texture"
msgstr ""

# @overload
#: ../../video.c:2102
msgid "tag|overload|load_texture"
msgstr ""

# SDL2::Renderer#load_texture
#: ../../video.c:2103
msgid "Load file and create a new {SDL2::Texture}."
msgstr ""

#~ msgid ""
#~ "Initialize SDL.\n"
#~ "  You must call this function before using any other Ruby/SDL2 methods."
#~ msgstr ""
#~ "SDLを初期化します．\n"
#~ "Ruby/SDL2の他のメソッドを呼ぶ前にこれを呼びだす必要があります．"
#~ msgid ""
#~ "  You can specify initialized subsystem by flags which is\n"
#~ "  bitwise OR of the following constants:"
#~ msgstr "初期化するサブシステムを以下の定数のビットORでflagsに指定します．"
